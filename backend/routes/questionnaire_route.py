from flask import Blueprint, request, jsonify

# prefix with /api
questionnaire_bp = Blueprint('questionnaire', __name__, url_prefix='/api/questionnaire')

# CREATE TABLE Questionnaire (
#   id INT AUTO_INCREMENT,
#   title VARCHAR(100) NOT NULL,
#   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
#   PRIMARY KEY (id)
# );

@questionnaire_bp.route('/', methods=['GET'])
def get_questionnaires():
    # Placeholder for fetching questionnaires from the database
    questionnaires = [
        {"id": 1, "title": "Customer Satisfaction", "created_at": "2024-01-01T00:00:00"},
        {"id": 2, "title": "Product Feedback", "created_at": "2024-01-01T00:00:00"}
    ]
    return jsonify(questionnaires)

@questionnaire_bp.route('/', methods=['POST'])
def add_questionnaire():
    data = request.get_json()
    title = data.get('title')
    if not title:
        return jsonify({"error": "Title is required"}), 400
    
    # Placeholder for inserting the new questionnaire into the database
    new_questionnaire = {
        "id": 3,  # This would be generated by the database
        "title": title,
        "created_at": "2024-01-01T00:00:00"  # This would be the current timestamp
    }
    return jsonify(new_questionnaire), 201

@questionnaire_bp.route('/<int:questionnaire_id>', methods=['GET'])
def get_questionnaire(questionnaire_id):
    # Placeholder for fetching a single questionnaire from the database
    questionnaire = {
        "id": questionnaire_id,
        "title": "Updated Questionnaire Title",
        "created_at": "2024-01-01T00:00:00"
    }
    return jsonify(questionnaire), 200

@questionnaire_bp.route('/<int:questionnaire_id>', methods=['DELETE'])
def delete_questionnaire(questionnaire_id):
    # Placeholder for deleting the questionnaire from the database
    return jsonify({"message": "Questionnaire deleted successfully"}), 200

@questionnaire_bp.route('/<int:questionnaire_id>', methods=['PUT'])
def update_questionnaire(questionnaire_id):
    data = request.get_json()
    title = data.get('title')
    if not title:
        return jsonify({"error": "Title is required"}), 400
    
    # Placeholder for updating the questionnaire in the database
    updated_questionnaire = {
        "id": questionnaire_id,
        "title": title,
        "created_at": "2024-01-01T00:00:00"  # This would be the original timestamp
    }
    return jsonify(updated_questionnaire), 200
